{"version":3,"sources":["/home/stephen-dorman/dev/zktheory/src/lib/StandardLayouts.ts"],"sourcesContent":["// Standard layouts based on Group Explorer patterns\n// This module provides canonical visual representations for well-known finite groups\n\nexport interface LayoutPosition {\n  x: number;\n  y: number;\n}\n\nexport interface StandardLayout {\n  positions: { [elementId: string]: LayoutPosition };\n  description: string;\n  generators?: string[];\n}\n\nexport class StandardLayoutGenerator {\n  \n  // Klein Four Group (V4) - Square layout\n  static getKleinFourLayout(): StandardLayout {\n    return {\n      positions: {\n        'e': { x: 0.5, y: 0.5 },     // Identity at center\n        'a': { x: 0.2, y: 0.5 },     // Left\n        'b': { x: 0.8, y: 0.5 },     // Right  \n        'c': { x: 0.5, y: 0.2 }      // Top (ab element)\n      },\n      description: \"Klein Four Group - Square arrangement\",\n      generators: ['a', 'b']\n    };\n  }\n\n  // Quaternion Q8 - Cube projection layout\n  static getQuaternionLayout(): StandardLayout {\n    return {\n      positions: {\n        '1': { x: 0.5, y: 0.5 },     // Identity at center\n        '-1': { x: 0.5, y: 0.2 },    // Opposite identity\n        'i': { x: 0.2, y: 0.4 },     // i\n        '-i': { x: 0.8, y: 0.6 },    // -i opposite\n        'j': { x: 0.4, y: 0.8 },     // j\n        '-j': { x: 0.6, y: 0.2 },    // -j opposite\n        'k': { x: 0.8, y: 0.4 },     // k\n        '-k': { x: 0.2, y: 0.6 }     // -k opposite\n      },\n      description: \"Quaternion Group Q8 - Cube projection\",\n      generators: ['i', 'j']\n    };\n  }\n\n  // Dihedral D3 (S3) - Triangle with reflections\n  static getDihedral3Layout(): StandardLayout {\n    return {\n      positions: {\n        'e': { x: 0.5, y: 0.5 },     // Identity at center\n        'r': { x: 0.5, y: 0.2 },     // Rotation 120°\n        'r²': { x: 0.5, y: 0.8 },    // Rotation 240°\n        's': { x: 0.2, y: 0.35 },    // Reflection 1\n        'sr': { x: 0.8, y: 0.35 },   // Reflection 2\n        'sr²': { x: 0.5, y: 0.65 }   // Reflection 3\n      },\n      description: \"Dihedral D3 (S3) - Triangular symmetry\",\n      generators: ['r', 's']\n    };\n  }\n\n  // Dihedral D4 - Square with reflections\n  static getDihedral4Layout(): StandardLayout {\n    return {\n      positions: {\n        'e': { x: 0.5, y: 0.5 },     // Identity at center\n        'r': { x: 0.3, y: 0.3 },     // 90° rotation\n        'r²': { x: 0.7, y: 0.3 },    // 180° rotation\n        'r³': { x: 0.7, y: 0.7 },    // 270° rotation\n        's': { x: 0.3, y: 0.7 },     // Reflection\n        'sr': { x: 0.1, y: 0.5 },    // Reflection composition\n        'sr²': { x: 0.9, y: 0.5 },   // Reflection composition\n        'sr³': { x: 0.5, y: 0.1 }    // Reflection composition\n      },\n      description: \"Dihedral D4 - Square symmetry\",\n      generators: ['r', 's']\n    };\n  }\n\n  // Alternating A4 - Tetrahedral layout\n  static getAlternating4Layout(): StandardLayout {\n    const sqrt3 = Math.sqrt(3);\n    return {\n      positions: {\n        'e': { x: 0.5, y: 0.5 },                    // Identity\n        '(123)': { x: 0.5, y: 0.2 },               // 3-cycle\n        '(132)': { x: 0.5, y: 0.8 },               // 3-cycle\n        '(124)': { x: 0.2, y: 0.35 },              // 3-cycle\n        '(142)': { x: 0.8, y: 0.35 },              // 3-cycle\n        '(134)': { x: 0.35, y: 0.65 },             // 3-cycle\n        '(143)': { x: 0.65, y: 0.65 },             // 3-cycle\n        '(234)': { x: 0.2, y: 0.65 },              // 3-cycle\n        '(243)': { x: 0.8, y: 0.65 },              // 3-cycle\n        '(12)(34)': { x: 0.35, y: 0.35 },          // Double transposition\n        '(13)(24)': { x: 0.65, y: 0.35 },          // Double transposition  \n        '(14)(23)': { x: 0.5, y: 0.65 }            // Double transposition\n      },\n      description: \"Alternating A4 - Tetrahedral arrangement\",\n      generators: ['(123)', '(12)(34)']\n    };\n  }\n\n  // Cyclic groups - circular arrangement\n  static getCyclicLayout(n: number): StandardLayout {\n    const positions: { [key: string]: LayoutPosition } = {};\n    const radius = 0.35;\n    const centerX = 0.5;\n    const centerY = 0.5;\n\n    for (let i = 0; i < n; i++) {\n      const angle = (2 * Math.PI * i) / n - Math.PI / 2; // Start from top\n      positions[i.toString()] = {\n        x: centerX + radius * Math.cos(angle),\n        y: centerY + radius * Math.sin(angle)\n      };\n    }\n\n    return {\n      positions,\n      description: `Cyclic C${n} - Circular arrangement`,\n      generators: ['1']\n    };\n  }\n\n  // Direct product layouts - grid arrangement\n  static getDirectProductLayout(m: number, n: number): StandardLayout {\n    const positions: { [key: string]: LayoutPosition } = {};\n    const marginX = 0.1;\n    const marginY = 0.1;\n    const availableWidth = 1 - 2 * marginX;\n    const availableHeight = 1 - 2 * marginY;\n    \n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        const x = marginX + (availableWidth * i) / (m - 1 || 1);\n        const y = marginY + (availableHeight * j) / (n - 1 || 1);\n        positions[`(${i},${j})`] = { x, y };\n      }\n    }\n\n    return {\n      positions,\n      description: `Direct Product C${m} × C${n} - Grid arrangement`,\n      generators: ['(1,0)', '(0,1)']\n    };\n  }\n\n  // Get standard layout for a group by name\n  static getStandardLayout(groupName: string, order: number): StandardLayout | null {\n    // Special cases first\n    switch (groupName) {\n      case 'C1':\n        return {\n          positions: { 'e': { x: 0.5, y: 0.5 } },\n          description: \"Trivial Group - Single point\",\n          generators: []\n        };\n      \n      case 'V4':\n      case 'Klein4':\n        return this.getKleinFourLayout();\n      \n      case 'Q8':\n      case 'Q4':\n        return this.getQuaternionLayout();\n      \n      case 'D3':\n      case 'S3':\n        return this.getDihedral3Layout();\n      \n      case 'D4':\n        return this.getDihedral4Layout();\n      \n      case 'A4':\n        return this.getAlternating4Layout();\n    }\n\n    // Pattern matching\n    if (groupName.startsWith('C') && /^C\\d+$/.test(groupName)) {\n      const n = parseInt(groupName.substring(1));\n      if (n <= 20) {\n        return this.getCyclicLayout(n);\n      }\n    }\n\n    // Dihedral groups\n    if (groupName.startsWith('D') && /^D\\d+$/.test(groupName)) {\n      const n = parseInt(groupName.substring(1));\n      if (n === 3) return this.getDihedral3Layout();\n      if (n === 4) return this.getDihedral4Layout();\n      // For other dihedral groups, use a more generic symmetric layout\n    }\n\n    // Direct products\n    const productMatch = groupName.match(/^C(\\d+)xC(\\d+)$/);\n    if (productMatch) {\n      const m = parseInt(productMatch[1]);\n      const n = parseInt(productMatch[2]);\n      return this.getDirectProductLayout(m, n);\n    }\n\n    return null;\n  }\n}\n"],"names":["StandardLayoutGenerator","getKleinFourLayout","positions","x","y","description","generators","getQuaternionLayout","getDihedral3Layout","getDihedral4Layout","getAlternating4Layout","sqrt3","Math","sqrt","getCyclicLayout","n","radius","centerX","centerY","i","angle","PI","toString","cos","sin","getDirectProductLayout","m","marginX","marginY","availableWidth","availableHeight","j","getStandardLayout","groupName","order","startsWith","test","parseInt","substring","productMatch","match"],"mappings":"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"}